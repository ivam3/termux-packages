#!/data/data/com.termux/files/usr/bin/bash

#update 2021
#Functions
#imagemagick

C='\033[1;36m'
G='\033[1;32m'
R='\033[1;31m'
Y='\033[1;33m'
B='\033[1;34m'
P='\033[1;35m'
RE='\033[0m'

command -v ffmpeg > /dev/null 2>&1 || { echo >&2 "Al parecer no tienes FFMPEG, espera";sleep 2;apt install -y ffmpeg;bash $0 ; }
command -v mogrify > /dev/null 2>&1 || { echo >&2 "Al parecer no tienes imagemagick, espera" ; sleep 2 ; apt install -y imagemagick ; bash $0 ; }

function _Logo {
        clear
        echo -e "$P"
echo -e "
      \_/
     (* *)
    __)#(__
   ( )...( )(_)  $G C O N V E R T E R$P
   || |_| ||//     $G      By$P
>==() | | ()/      $G </[M]iLu{×}_> | DNP | 2021$P
    _(___)_
   [-]   [-]  $RE      Music - Video - Images
   "   

}

function _Menu() {
	_Logo
	echo -e $G"Elije una opcion

	[$RE 1$G ]$Y Audio $G
	[$RE 2$G ]$Y Imagen $G
	[$RE 3$G ]$Y Video $G
	[$RE 4$G ]$Y Acerca de.. $G
	[$RE 9$G ]$Y Actualizar..$G
	[$RE 0$G ]$Y Salir $G
	"
	read -p " >> " OPT

	case $OPT in
		1)
			MODE="- Audio -";FR1=mp3;FR2=wma;FR3=ogg
			_Main
			;;
		2)
			MODE="- Imagen -";FR1=jpeg;FR2=png;FR3=jpg
			_Main
			;;
		3)
			MODE="- Video -";FR1=avi;FR2=wmv;FR3=mp4
			_Main
			;;
		4)
			_About
			;;
		9)
			_Update
			;;
		0)
			_Logo
			echo -e $G"bye bye.."
			exit
			;;
	esac

}


function _Main() { 
_Logo
echo -e $G"Escribe la ruta donde se encuentra\ntu archivo a convertir$RE Ejem.:$R /sdcard/MiFolder$RE"

while read -p "$MODE >> " RUTA && [ -z $RUTA ];do
	echo -e $R"[!]$Y Debes ingresar una ruta valida
$RE"
done
ls $RUTA > /dev/null 2>&1;C1=$?

if [ "$C1" = "0" ];then
	_Continue
else
	echo -e $R"[!]$Y Ruta no existe, verificala$RE";sleep 3
	bash $0
fi
}

function _Music() {
	ffmpeg -i $RUTA/"$FILE2" "$RUTA/${FILE2%.*}".$EXIT
}
function _Image(){
	echo -e $G"Convirtiendo espera..."
mogrify -format $EXIT $RUTA/"$FILE2" 
}
function _Video(){
	ffmpeg -i $RUTA/"$FILE2" "$RUTA/${FILE2%.*}".$EXIT
} 


function _Continue() {
	_Logo
	ls -p $RUTA | grep -v / |cat -n
	echo -e "$G"
	while read -p "Selecciona una opcion >> " OPTION && [ -z $OPTION ];do
	echo -e $R"[!]$Y Debes ingresar una opcion$RE"
done
FILE2=$(ls $RUTA |sed "$OPTION q;d" |cut -d ";" -f2,6)

if [ -d $RUTA/$FILE2 ];then
	echo -e $Y"[X]$R Error! Seleccionaste un directorio\nreiniciando script$C";sleep 3;bash $0
fi

_Logo
echo -e "$Y Ingresa el formato de salida,$RE Ejemplo:$C $FR1, $FR2, $FR3 etc.$RE"
while read -p " >> " EXIT && [ -z $EXIT ];do
echo -e $R"[X]$Y No escribiste nada o Formato incopatible $RE";sleep 1
done

_Logo
echo -e $G"La informacion, es correcta? s/n"
echo -e $G"Archivo:$Y $FILE2 $RE";sleep 1
echo -e $G"Formato:$Y $EXIT $RE";sleep 1
while read -p " >> " SINO && [ -z $SINO ];do                    echo -e $R"[X]$Y No escribiste nada$C"
	sleep 1
done

if [ $SINO = "s" ] || [ $SINO = "S" ] || [ $SINO = "y" ] || [ $SINO = "Y" ];then
	echo -e "$G "
	if [ "$MODE" = "- Audio -" ];then
		_Music
	elif [ "$MODE" = "- Imagen -" ];then
		_Image
	elif [ "$MODE" = "- Video -" ];then
		_Video
	fi
	_Logo
	echo -e $G"Archivo original:$RE "$FILE2""
	echo -e $G"Deseas conservar el archivo original?"
	read -p "s/n >> " SN
	if [ $SN = "s" ] || [ $SN = "S" ];then
		_OK
		_Continue
	elif [ $SN = "n" ] || [ $SN = "N" ];then
		rm "$RUTA/$FILE2"
		_OK
		_Continue
	else
		_Logo
		echo -e "Opcion invalida"
		sleep 2
		_Continue
	fi
fi
}

function _OK() {
	_Logo
	echo -e "$Y Convertido correctamente!\n Guardado como...$G ${FILE2%.*}.$EXIT\n$Y En:$G $RUTA $RE"
	read -n 1 -p "ENTER To continue.."
}

function _Error() {
	_Logo
	echo -e "$R[!]$Y Ocurrio un error vuelve a intentarlo!"
	sleep 3;bash $0
}

function _About(){
	clear
	echo -e $G"
	            C O N V E R T E R
		           by
		</[M]iLu{×}_> | DNP | 2021

   CONVERTER$RE Creado para DNP (Developer New Programmers)
              Desarrollado por$G </[M]iLu{×}_>$RE
        para el canal$G https://t.me/Ivam3by_Cinderella$RE
	        bot ayuda$G https://t.me/Ivam3_Bot$RE
	
      	  Este script esta creado para facilitar
        el cambio de formatos multimedia, utilizando
    FFMPEG y imagemagick  para su correcto funcionamiento

		¡GRACIAS POR INSTALAR CONVERTER!
  $C             </[M]iLu{×}_>$G https://t.me/miluxmil$RE
    "
    read -n 1 -p "ENTER To Continue.."
    bash $0
}

function _Update(){
	_Logo
	if [ ! -d ~/.milux ];then
		mkdir ~/.milux
	fi

	if [ ! -f ~/.milux/cav.mlx ];then
		echo "V-2.0" > ~/.milux/cav.mlx #Converter Actual Version
	fi
	echo -e $G"Espera mientras busco la ultima version"
	sleep 2
	curl https://raw.githubusercontent.com/miluxmil/milux/master/CCV > /dev/null 2>&1 > ccv.mlx
	mv ccv.mlx ~/.milux/ccv.mlx
	CAV=$(cat ~/.milux/ccv.mlx)
	CCV=$(cat ~/.milux/cav.mlx)
	if [ "$CAV" = "$CCV" ];then
		_Logo
		echo -e $G"Tienes la ultima version$RE"
		sleep 2
		rm ~/.milux/ccv.mlx
		bash $0
	else
		_Logo
		echo -e $G"Nueva version encontrada!\nActualizando.."
		sleep 2
		curl https://raw.githubusercontent.com/miluxmil/milux/master/converter > /dev/null 2>&1 > converter
		chmod 777 converter;mv converter $PREFIX/bin/
		mv ~/.milux/ccv.mlx ~/.milux/cav.mlx
		_Logo
		echo -e $G"Actualizado correctamente"
		sleep 2
		bash $0
	fi



}
	
_Menu
