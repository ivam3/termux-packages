#!/data/data/com.termux/files/usr/bin/bash
IFS=$"/n/t"
trap ctrl_c 2

source ${HOME}/.local/etc/i-Haklab/variables
source $iHETC/functions
echo "[*] Setting $1 following i-Haklab instructions ..."
case "$1" in

	apache2|phpmyadmin)
		for i in apache2 phpmyadmin
		do
			[[ -d ${HOME}/.local/etc/$i ]] || {
				mkdir -p ${HOME}/.local/etc/$i;
			}
		done
		[[ -e ${HOME}/.local/etc/apache2/httpd.conf ]] || {
			wget --tries=20 --quiet $iHDB/etc/apache2/httpd.conf -O ${HOME}/.local/etc/apache2/httpd.conf;
		}
		[[ -e ${HOME}/.local/etc/phpmyadmin/config.inc.php ]] || {
			wget --tries=20 --quiet $iHDB/etc/phpmyadmin/config.inc.php -O ${HOME}/.local/etc/phpmyadmin/config.inc.php;
		}
		[[ -e ${PREFIX}/etc/apache2/httpd.conf ]] && {
			rm -rf ${PREFIX}/etc/apache2/httpd.conf;
		}
		[[ -e ${PREFIX}/etc/phpmyadmin/config.inc.php ]] && {
			rm -rf ${PREFIX}/etc/phpmyadmin/config.inc.php;
		}
		ln -s ${HOME}/.local/etc/apache2/httpd.conf ${PREFIX}/etc/apache2/httpd.conf
		ln -s ${HOME}/.local/etc/phpmyadmin/config.inc.php ${PREFIX}/etc/phpmyadmin/config.inc.php
		;;

	fish)
		[[ -e ${PREFIX}/etc/fish/config.fish ]] && {
			rm -f ${PREFIX}/etc/fish/config.fish 2>>$LOGFILE
		}
		ln -s ${HOME}/.local/etc/fish/config.fish ${PREFIX}/etc/fish/config.fish 2>>$LOGFILE
		;;

	gdb)
		chk-pkg git git
		git clone --quiet https://github.com/longld/peda.git $TOOLS/peda
		[[ -e ${HOME}/.gdginit ]] && touch ${HOME}/.gdbinit
		echo "source $TOOLS/peda/peda.py" >> ${HOME}/.gdbinit
		;;

	nano)
		cat <<- CONF > $HOME/.nanorc
set linenumbers
set historylog
set tabsize 4
set autoindent
set mouse
set titlecolor white,gray
set statuscolor white,red
set keycolor white,gray
set functioncolor green
set numbercolor white,gray
set softwrap
set softwrap
#set nohelp
		CONF
		;;

	proxychains-ng)
		[[ -e ${PREFIX}/etc/proxychains.conf ]] && {
			rm -rf ${PREFIX}/etc/proxychains.conf;
		}
		[[ -e ${HOME}/.local/etc/proxychains.conf ]] || {
			wget -q $iHDB/etc/proxychains.conf -O ${HOME}/.local/etc/proxychains.conf;
		}
		ln -s ${HOME}/.local/etc/proxychains.conf ${PREFIX}/etc/proxychains.conf
		;;

	tigervnc)
		[[ -d ${HOME}/.vnc ]] || {
			mkdir ${HOME}/.vnc;
		}
		cat <<- CONF > ~/.vnc/xstartup
#!/data/data/com.termux/files/usr/bin/sh
## This file is executed during VNC server
## startup.

# Launch terminal emulator Aterm.
# Requires package 'aterm'.
aterm -geometry 160x48+20+20 -ls &

# Launch Tab Window Manager.
# Requires package 'xorg-twm'.
startxfce4
		CONF
		;;

	tmux)
		[[ -d ${HOME}/.tmux ]] && {
			rm -rf ${HOME}/.tmux;
		}
		cd;git clone https://github.com/gpakosz/.tmux ${HOME}/.tmux
		ln -s -f ${HOME}/.tmux/.tmux.conf
		cp ${HOME}/.tmux/.tmux.conf.local .
		sed -i "11a set-option -g default-shell ${PREFIX}/bin/fish" ~/.tmux/.tmux.conf
		;;

	tor)
		[[ -e ${PREFIX}/etc/tor/torrc ]] && {
			rm -rf ${PREFIX}/etc/tor/torrc;
		} || {
			mkdir -p ${PREFIX}/etc/tor;
		}
		[[ -e ${HOME}/.local/etc/tor/torrc ]] || {
			mkdir -p ${HOME}/.local/etc/tor;
			wget -q $iHDB/etc/tor/torrc -O ${HOME}/.local/etc/tor/torrc;
		}
		ln -s ${HOME}/.local/etc/tor/torrc ${PREFIX}/etc/tor/torrc
		;;

	vim)
		chk-pkg wget wget
		[[ -d ${HOME}/.vim ]] && {
			rm -rf ${HOME}/.vim
		}
		[[ -e ${HOME}/.vimrc ]] && {
			rm -rf ${HOME}/.vimrc
		}
		wget --tries=20 --quiet $iHDB/.local/etc/i-Haklab/setvim.zip -O ${HOME}/setvim.zip
		[[ -e ${HOME}/setvim.zip ]] || {
			STDERR
		}
		unzip ${HOME}/setvim.zip -d ${HOME}
		rm -rf ${HOME}/setvim.zip
		vim +PlugUpdate +x +x 2>>$LOGFILE
		;;

	youtubedr)
		executable="youtubedr download"
		cat <<- CONF > ${HOME}/.netrc
#!${PREFIX}/bin/bash
#
machine <extractor> login <login> password <password>
#
#Follow my example:
#
#machine youtube login myaccount@gmail.com password my_youtube_password
#machine twitch login my_twitch_account_name password my_twitch_password
CONF
		chmod 711 ~/.netrc
		cat <<- CONF > ${PREFIX}/bin/termux-url-opener
#!${PREFIX}/bin/bash
#
echo "Choose a format :"
echo "For audio only press 1"
echo "For video 360p press 2"
echo "For video 480p press 3"
echo "For video 720p press 4"
echo "For video 1080p press 5"
read option
command='-no-mtime -o /data/data/com.termux/files/home/storage/shared/Youtube/%(title)s.%(ext)s -f'
if [ "\$option" -eq "1" ]; then
	echo "\$command 140" > ${HOME}/.config/youtube-dl/config
	exec $executable "\$1"
elif [ "\$option" -eq "2" ]; then
	echo "\$command \"best[height<=360]\"" > ${HOME}/.config/youtube-dl/config
	exec $executable "\$1"
elif [ "\$option" -eq "3" ]; then
	echo "\$command \"best[height<=480]\"" > ${HOME}/.config/youtube-dl/config
	exec $executable "\$1"
elif [ "\$option" -eq "4" ]; then
	echo "\$command \"best[height<=720]\"" > ${HOME}/.config/youtube-dl/config
	exec $executable "\$1"
elif [ "\$option" -eq "5" ]; then
	echo "\$command \"best[height<=1080]\"" > ${HOME}/.config/youtube-dl/config
	exec $executable "\$1"
fi
CONF
	 dos2unix ${PREFIX}/bin/termux-url-opener
	 chmod 711 ${PREFIX}/bin/termux-url-opener
		;;
esac
