#!/data/data/com.termux/files/usr/bin/bash
#Created on July/2021
IFS=$'\n\t'
trap ctrl_c 2
zzz=$(sleep 0.5)
source $HOME/.local/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
toInstall="$1"
ctrl_c(){ printf "\n$Y\n   (¿) Need a help (?)$B\nTelegram : t.me/Ivam3_Bot$W\n";}
Err() { printf "$R\n(_➤)$W Installation failed";ctrl_c;exit;}
PS(){ printf "$G(_➤)$W Installing python modules.\n ╰─────➤$W (it could take a while)...\n";}
PIPup() {
	for PYv in python python2;do
		yes|apt install $PYv >/dev/null 2>>$LOGFILE
		$PYv -m pip --no-color --quiet --no-cache-dir install --upgrade pip 2>>$LOGFILE
	done
}
PYmodules(){
	python$PYv -m pip --no-color --quiet --no-cache-dir install -r $TMPDIR/requirements.txt 2>>$LOGFILE
}
goEnv() {
	yes|apt install golang
	[[ -d ~/go/pkg/mod/github.com ]] || mkdir -p $HOME/go/pkg/mod/github.com
	[[ -d $PREFIX/lib/go/src ]] || mkdir -p $PREFIX/lib/go/src

	if ! $(grep -oE "GOPATH" $INITFILE);then
		sed -i "21a set GOPATH $HOME/go" $INITFILE
	fi
	if ! $(grep -oE "GOROOT" $INITFILE); then
		sed -i "22a set GOROOT $PREFIX/lib/go" $INITFILE
	fi
}
SearchTool(){
	if [[ -d $TOOLS/$toInstall ]] || [[ -e $PREFIX/bin/$toInstall ]] || [[ -e $HOME/.local/bin/$toInstall ]] || [[ -d $PREFIX/opt/$toInstall ]] || [[ -e ~/go/bin/$toInstall ]] || [[ ! -z $login ]];then
		printf "$R(_➤)$W $1 it's already installed\n";exit
	else
		running 3
		yes|apt autoremove
		APTupdate
	fi
}

if [[ $SHELL = $PREFIX/bin/fish ]];then
	INITFILE="$PREFIX/etc/fish/config.fish"
else
	INITFILE="$PREFIX/etc/bash.bashrc"
fi

case "$toInstall" in
	NULL-theharvester-NULL)
		SearchTool
		yes|apt install git python libxml2 libxml2-static libxml2-utils libxslt libxslt-static rust
		PIPup
		PYv=""
		git clone --quiet https://github.com/laramies/theHarvester $TOOLS/$toInstall
		cat $TOOLS/$toInstall/requirements/dev.txt > $TMPDIR/requirements.txt
		sed -i 's|/etc/theHarvester|/data/data/com.termux/files/usr/etc/theHarvester|g' setup.py
		python setup.py install
		PYmodules
		rm -f $TMPDIR/requirements.txt
		yes|apt remove rust && apt autoremove
		;;

	#::PYTHON2::#
	a2sv)
	  SearchTool
		yes|apt install git python2 openssl
		PIPup
		Pyv="2"
		git clone --quiet https://github.com/hahwul/a2sv $TOOLS/$toInstall
		chmod +x $TOOLS/$toInstall/*
		printf "argparse\nnetaddr" > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		;;
	fbi)
		yes|apt install git python2
		PIPup
		PYv="2"
		git clone --quiet https://github.com/xHak9x/$toInstall $TOOLS/$toInstall
		chmod +x -R $TOOLS/$toInstall
		printf "requests" > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		;;
	hasher)
		SearchTool
		yes|apt install git python2
		PIPup
		PYv="2"
		git clone --quiet https://github.com/CiKu370/$toInstall $TOOLS/$toInstall
		printf "progressbar\npasslib" > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		;;
	kerbrute)
		SearchTool
		yes|apt install git python2 rust
		PIPup
		PYv="2"
		git clone --quiet https://github.com/TarlogicSecurity/kerbrute $TOOLS/$toInstall
		chmod 750 -R $TOOLS/$toInstall
		printf "impacket" > $TMPDIR/requirements.txt
		PYmodules
		yes|apt remove rust;apt autoremove
		rm -f $TMPDIR/requirements.txt
		;;
	pybelt)
		SearchTool
		yes|apt install git python2
		PIPup
		PYv="2"
		git clone --quiet https://github.com/Ekultek/Pybelt $TOOLS/$toInstall
		chmod +x -R $TOOLS/$toInstall
		sed 's|beautifulsoup4==4.5.3|beautifulsoup4==4.7.1|g' -i requirements.txt
		cat $TOOLS/$toInstall/requirements.txt > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		;;
	recondog)
		SearchTool
		yes|apt install git python2
		PIPup
		PYv="2"
		git clone --quiet https://github.com/s0md3v/ReconDog $TOOLS/$toInstall
		chmod 750 -R $TOOLS/$toInstall
		printf "requests\ntld" > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		;;
	sqliv)
		SearchTool
		yes|apt install python2 wget unzip libxml2 libxml2-static libxml2-utils libxslt libxslt-static
		PIPup
		PYv="2"
		wget -q $iHDB/to-install/$toInstall.zip
		unzip -q $toInstall.zip -d $TOOLS
		rm $toInstall.zip
		chmod 750 -R $TOOLS/$toInstall
		printf "terminaltables\ntermcolor\nnyawc" > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		;;
	websploit)
		SearchTool
		yes|apt install git python2
		PIPup
		PYv="2"
		git clone --quiet https://github.com/The404Hacking/$toInstall $TOOLS/$toInstall
		chmod +x -R $TOOLS/$toInstall
		printf "numpy\n" > $TMPDIR/requirements.txt
		PYmodules
		rm -rf $TMPDIR/requirements.txt
		;;


		#::BASH::#
	exploitdb)
		SearchTool
		yes|apt install git wget
		git clone --quiet https://github.com/offensive-security/$toInstall $TOOLS/$toInstall
		chmod +x $TOOLS/$toInstall/*
		wget -q $iHDB/fix-tools/searchsploit -O ~/.searchsploit_rc
		;;
	lockphish)
		SearchTool
		[[ -e $PREFIX/bin/ngrok ]] || { printf >&2 "$R\n(_➤) ERROR :$W ngrok is not installed\n";ctrl_c;}
		yes|apt install git wget
		git clone --quiet https://github.com/JasonJerry/$toInstall $TMPDIR/$toInstall
		cp -r $TMPDIR/$toInstall $TOOLS/$toInstall
		if [[ ! -d $TOOLS/$toInstall ]]
		then
			rm -rf $TMPDIR/$toInstall 2>/dev/null
			printf >&2 "$R\n(_➤) ERROR :$W lockphish directory missing\n"
			ctrl_c
		fi
		rm -rf $TOOLS/$toInstall/$toInstall.sh $TMPDIR/$toInstall
		wget -q $iHDB/fix-tools/$toInstall -O $TOOLS/$toInstall/$toInstall
		chmod 711 $TOOLS/$toInstall/*
		;;

	userrecon)
		SearchTool
		yes|apt install git
		git clone --quiet https://github.com/issamelferkh/userrecon $TOOLS/$toInstall
		mv $TOOLS/$toInstall/$toInstall.sh $TOOLS/$toInstall/$toInstall
		chmod 750 $TOOLS/$toInstall/$toInstall
		;;
	wbruter)
		SearchTool
		yes|apt install git
		git clone --quiet https://github.com/wuseman/WBRUTER $TOOLS/$toInstall
		chmod +750 -R $TOOLS/$toInstall
		;;

	#::BIN::#
	converter)
		SearchTool
		yes|apt install curl
		[[ $toInstall = blackbox ]] && {
			yes|apt install python2;
			python2 -m pip install requests;
		}
		curl -Ls $iHDB/bin/$toInstall -o $HOME/.local/bin/$toInstall
		chmod 751 $HOME/.local/bin/$toInstall
		;;
	hydra)
		SearchTool
		yes|apt install git cmake make automake libgcrypt libssh libidn openssl openssl-tool
		git clone --quiet https://github.com/vanhauser-thc/thc-$toInstall $PREFIX/opt/thc-$toInstall
		hpath=$PREFIX/opt/thc-$toInstall
		chmod 750 -R $hpath
		sed -i 's|wait3(NULL, WNOHANG, NULL);|wait4(NULL, WNOHANG, NULL, NULL);|g' $hpath/$toInstall.c
		cd $hpath;make clean && sh configure --prefix=$PREFIX;make;make install
		cd $hpath/$toInstall-gtk;sh make_xhydra.sh
		for i in $toInstall x$toInstall;do
			[[ -e $hpath/$i ]] && chmod +x $hpath/$i;cp $hpath/$i $HOME/.local/bin/ || printf "$R\n   《ERR TO COMPILE $i》\n"
		done
		rm -rf $hpath
		;;

	shc|unshc)
		SearchTool
		shcVer="3.8.9"
		yes|apt install wget make
		wget -q http://www.datsi.fi.upm.es/~frosal/sources/shc-$shcVer.tgz -O $TMPDIR/shc-$shcVer.tgz
		tar -xvzf $TMPDIR/shc-$shcVer.tgz -C $TMPDIR
		rm -rf $TMPDIR/shc-$shcVer.tgz
		cd $TMPDIR/shc-$shcVer
		make;make install
		mv $TMPDIR/shc-$shcVer/$toInstall $HOME/.local/bin/
		rm -rf $TMPDIR/shc-$shcVer
		wget -q https://raw.githubusercontent.com/yanncam/UnSHc/master/latest/unshc.sh -O $HOME/.local/bin/unshc
		sed 's|which|command -v|g' -i $HOME/.loczl/bin/unshc
		sed 's|/tmp/XXXXXX|$PREFIX/tmp/XXXXXX|g' -i $HOME/.local/bin/unshc
		chmod +x $HOME/.local/bin/*
		;;
	slowhttptest)
		SearchTool
		yes|apt install git make automake
		git clone --quiet https://github.com/shekyan/$toInstall $TOOLS/$toInstall
		cd $TOOLS/$toInstall
		./configure && make && make install
		cp $TOOLS/$toInstall/src/$1 $HOME/.local/bin
		chmod +x $HOME/.local/bin/$toInstall
		;;
	snow)
		SearchTool
		yes|apt install wget make automake
		wget -q http://http.kali.org/pool/main/s/steg$toInstall/steg$toInstall_20130616.orig.tar.gz -O $TMPDIR/steg$toInstall_20130616.orig.tar.gz
		tar -xvzf $TMPDIR/stegsnow_20130616.orig.tar.gz -C $TMPDIR
		cd $TMPDIR/$toInstall-20130616/
		make
		mv $TMPDIR/$toInstall-20130616/$toInstall $HOME/.local/bin
		rm -rf $TMPDIR/snow-20130616/
		rm -rf $TMPDIR/stegsnow_20130616.orig.tar.gz
		chmod 750 $HOME/.local/bin/$toInstall
		;;
	#::RUBY::#
	beef)
	  [[ -d $PREFIX/opt/$toInstall ]] || rm $HOME/.local/bin/$toInstall 2>/dev/null
	  SearchTool
		yes|apt install ruby nodejs #dirmngr -y
		if [[ ! -d $PREFIX/opt ]];then
			mkdir -p $PREFIX/opt
		fi
		git clone --quiet https://github.com/$1project/$toInstall $PREFIX/opt/$toInstall
		sed -i "5a gem 'net-smtp', require: false" $PREFIX/opt/$toInstall/Gemfile
		sed "s|database: '/opt/GeoIP/GeoLite2-City.mmdb'|database: '/data/data/com.termux/files/usr/opt/GeoIP/GeoLite2-City.mmdb'|g" -i config.yaml
		sed 's|passwd: "beef"|passwd: "Ivam3byCinderella"|g' -i config.yaml
		sed '155 s|enable: false|enable: true|g' -i config.yaml
		sed "s|ssl_version: 'TLS1'|ssl_version: 'TLS1.2'|g" -i $PREFIX/opt/$toInstall/extensions/metasploit/config.yaml
		cd $PREFIX/opt/$toInstall
		update --system
		gem install bundler
		bundle install
		curl -Ls ${iHDB}/fix-tools/fixbigdecimal|bash
		wget -q $iHDB/bin/$1 -O $HOME/.local/bin/$1
		chmod +x $HOME/.local/bin/$1
		wget -q $iHDB/to-install/GeoLite2-City_20200331.tar.gz -O $PREFIX/opt/$1/GeoLite2-City_20200331.tar.gz
		if [[ -e $PREFIX/opt/$1/GeoLite2-City_20200331.tar.gz ]];then
			gunzip $PREFIX/opt/$1/GeoLite2-City_20200331.tar.gz
			if [[ -e $PREFIX/opt/$1/GeoLite2-City_20200331.tar ]];then
				tar xvf $PREFIX/opt/$1/GeoLite2-City_20200331.tar
				rm -rf $PREFIX/opt/$1/GeoLite2-City_20200331.tar
				if [[ ! -d $PREFIX/opt/GeoIP ]];then
					mkdir -p $PREFIX/opt/GeoIP
				else
					Err
				fi
				if [[ -d $PREFIX/opt/$1/GeoLite2-City_20200331 ]];then
					mv $PREFIX/opt/$1/GeoLite2-City_20200331/* $PREFIX/opt/GeoIP
					rm -rf $PREFIX/opt/$1/GeoLite2-City_20200331
				else
					Err
				fi
			else
				Err
			fi
		else
			Err
		fi
		;;

	cewl)
		SearchTool
		yes|apt install ruby git
		git clone --quiet https://github.com/digininja/CeWL $TOOLS/$toInstall
		cd $TOOLS/$toInstall
		chmod +x -R $TOOLS/$toInstall
		bundle install
		;;
	hatcloud)
		SearchTool
		yes|apt install git ruby
		git clone --quiet https://github.com/HatBashBR/HatCloud $TOOLS/$toInstall
		chmod 750 $TOOLS/$toInstall/$toInstall.rb
		;;
    wpscan)
			SearchTool
	    yes|apt install git ruby
	    git clone --quiet https://github.com/wpscanteam/$toInstall $TOOLS/$toInstall
	    gem install $toInstall -- --use-system-libraries
	    chmod 750 $TOOLS/$toInstall/bin/*
	    curl -Ls ${iHDB}/fix-tools/fixbigdecimal|bash
	    ;;
	#::GO::
	amass)
	  SearchTool
		goEnv
		export GO111MODULE=on
		go get -v github.com/OWASP/Amass/v3/...
		chmod 751 -R ~/go
		goa=$(find ~/go/pkg/mod/github.com -type d -iname "!$toInstall"|head -n 1)
		ln -s $goa/$(ls $goa) $PREFIX/lib/go/src/$toInstall
		cd $gob/$(ls $gob)
		go get && go build && go install
		;;
	aquatone)
		SearchTool
		goEnv
		git clone --quiet https://github.com/michenriksen/$toInstall ~/go/pkg/mod/github.com/$toInstall
		ln -s $HOME/go/pkg/mod/github.com/$toInstall $HOME/$toInstall
		wget -q $iHDB/bin/$toInstall -O $HOME/.local/bin/$toInstall
		gem install --quiet --silent $toInstall
		;;
	gophish)
		SearchTool
		goEnv
		go get github.com/$toInstall/$toInstall
		chmod 751 -R ~/go
		gop1=$(find ~/go/pkg/mod/github.com -type d -iname $toInstall|head -n 1)
		gop2=$(ls $gop1|grep $toInstall)
		mv ~/go/bin/$toInstall $gop1/$gop2/$toInstall
		cat <<- CONF > ~/go/bin/$toInstall
		#!/usr/bin/bash
		cd $gop1/$gop2
		exec $gop1/$gop2/$toInstall
		#           i-Haklab by Ivam3.
		CONF
		chmod +x ~/go/bin/$toInstall
		sed 's|"listen_url": "0.0.0.0:80",|"listen_url": "127.0.0.1:8080",|g' -i $gop1/$gop2/config.json
		chmod 640 $gop1/$gop2/config.json
		;;
	tangalanga)
		SearchTool
		goEnv
		go get github.com/elcuervo/$toInstall
		chmod 751 -R ~/go
		got=$(find ~/go/pkg/mod/github.com -type d -iname "$toInstall*")
		cd $got
		go get
		go build
		go install
		;;
	virustotal)
		SearchTool
		for repo in unstable-repo $toInstall-cli;do
			PKG=$(pkg list-all|grep -o $repo)
			if [[ ! -z "$PKG" ]];then
				yes|pkg install $repo
			elif [[ ! -d $HOME/go/src/github.com/VirusTotal/vt-cli ]]; then
				goEnv
				go get -d github.com/VirusTotal/vt-cli/vt
				cd ~/go/src/github.com/VirusTotal/vt-cli
				make install
				ln -s ~/go/bin/vt $HOME/.local/bin/vt
				exec vt completion bash > $PREFIX/etc/bash_completion.d/vt
			fi
		done
		;;
	#::PERL::#

	acccheck)
		SearchTool
		yes|apt install git perl
		git clone --quiet https://github.com/qashqao/$toInstall $TOOLS/$toInstall
		chmod +x -R $TOOl/$toInstall
		;;
	#:PHP:#
	rhawk)
	  SearchTool
		yes|apt install php
		git clone --quiet https://github.com/Tuhinshubhra/RED_HAWK $TOOLS/$toInstall
		chmod +x $TOOLS/$toInstall/$toInstall.php
		;;
	#::ROOT::#
	dnsenum)
		SearchTool
		if chk-root;then
			apt install curl perl
			curl -Ls https://raw.githubusercontent.com/fwaeytens/$toInstall/master/$toInstall.pl -o $HOME/.local/bin/$toInstall
			termux-fix-shebang $HOME/.local/bin/$toInstall
			chmod +x $HOME/.local/bin/$toInstall
			for repo in WWW::Mechanize Net::IP Net::DNS Net::Netmask XML::Writer String::Random ; do
				cpan -i $repo
			done
			[[ -d $PREFIX/share/$toInstall ]] || mkdir -p $HOME/.local/share/$toInstall
			[[ -d ~/.$toInstall ]] || mkdir -p ~/.$toInstall
			curl https://raw.githubusercontent.com/fwaeytens/$toInstall/master/dns.txt -o $HOME/.local/share/$toInstall/dns.txt
			exec sudo $toInstall
		else
			STDERROOT
		fi
		;;
	nikto)
		SearchTool
		if chk-root;then
			yes|apt install git wget perl
			git clone --quiet https://github.com/sullo/nikto $TOOLS/$toInstall
			chmod 750 -R $TOOLS/$toInstall
			wget -q $iHDB/bin/nikto -O $HOME/.local/bin/$toInstall
			chmod +x $HOME/.local/bin/nikto
		else
			STDERROOT
		fi
		;;
	webhackshl)
		SearchTool
		yes|apt install git curl python tor ruby nmap
		PIPup
		PY=""
		git clone --quiet https://github.com/sechacklabs/$toInstall $TOOLS/$toInstall
		wget -q $iHDB/fix-tools/checker.py -O $TOOLS/$toInstall/modules/checker.py
		printf "fierce" > $TMPDIR/requirements.txt
		PYmodules
		rm -f $TMPDIR/requirements.txt
		for i in sqlmap nikto whatweb wpscan dnsenum;do
			exec i-Haklab install $i
		done
		;;
	xerosploit)
		SearchTool
		TMPPATH=$PREFIX/opt/$toInstall
		if chk-root; then
			yes|apt install git nmap hping3 build-essential python2 ruby git libpcap
			PIPup
			PYv="2"
			git clone --quiet https://github.com/LionSec/$toInstall $TMPPATH
			printf "tabulate\nterminaltables" > $TMPDIR/requirements.txt
			chmod +x -R $TMPPATH/tools
			PYmodules
			rm -f $TMPDIR/requirements.txt
			cd $TMPPATH/tools/bettercap/
			gem build bettercap.*
			gem install xettercap-*
			for del in xettercap-* $TMPPATH/run.sh $TMPPATH/$toInstall.py;do
				rm -rf $del
			done
			wget -q $iHDB/fix-tools/$toInstall.py -O $TMPPATH/$toInstall.py
		fi
		;;
esac
