#!/data/data/com.termux/files/usr/bin/bash
#
echo "Cloning metasploit-framework ..."
msfGit="https://github.com/rapid7/metasploit-framework.git"
mkdir -p ${PREFIX}/opt
msfDir="${PREFIX}/opt/metasploit-framework"
git clone --quiet --depth 1 $msfGit $msfDir
[[ -d $msfDir ]] || { echo "(_âž¤) Metasploit directory missing... Aborting.";exit 1;}

echo "Installing and updating ruby gems ..."
cd $msfDir
sed -i "5a gem 'net-smtp', require: false" $msfDir/Gemfile
gem install --no-document --verbose rubygems-update
update_rubygems
gem install --no-document --verbose bundler
gem install actionpack
gem install rails --platform=ruby -- --use-system-libraries
gem install nokogiri --platform=ruby -- --use-system-libraries
bundle config build.nokogiri --use-system-libraries
bundle install -j$(nproc --all) --verbose

echo "Running RuGiR(Ruby Gem Issues Resolved)";sleep 2
bundle update --bundler
rubyLIBv=$(ls ${PREFIX}/lib/ruby|sort -r|grep -m 1 '[0-9].[0-9].[0-9]')
rubyLIB="${PREFIX}/lib/ruby/gems/$rubyLIBv"
#sleep 10
#echo -en "\e[33mWARNING:\e[0m Please answer questions with an 'y'(YES) or '3'(ALL)"
#sleep 1
#gem uninstall nokogiri
#gem install nokogiri --platform=ruby -- --use-system-libraries
#bundle config build.nokogiri --use-system-libraries
sed -i "s@/etc/resolv.conf@${PREFIX}/etc/resolv.conf@g" $msfDir/lib/net/dns/resolver.rb
for i in aarch64-linux-android arm-linux-androideabi \
	i686-linux-android x86_64-linux-android;do
	if [[ -e "$rubyLIB/${i}/bigdecimal.so" ]]
	then
		if [[ -e "$rubyLIB/${i}/bigdecimal/util.so" ]]
		then
			if [[ -n "$(patchelf --print-needed "$rubyLIB/${i}/bigdecimal/util.so"|grep bigdecimal.so)" ]]
			then
				exit 0
			fi
		fi
		if [[ -e "$rubyLIB/${i}/bigdecimal/util.so" ]]
		then
			patchelf --add-needed \
				"$rubyLIB/${i}/bigdecimal/util.so"
		fi
		if [[ -e "$rubyLIB/${i}/bigdecimal.so" ]]
		then
			patchelf --add-needed \
				"$rubyLIB/${i}/bigdecimal.so"
		fi
	fi
done
for i in $(find ${PREFIX}/lib/ruby/ -type f -iname ruby_thread_local_var.rb);do
	sed -i "s|ObjectSpace.define_finalizer(self, self.class.threadlocal_finalizer(@index))| |g" $i
	sleep 1
done
sed -i "s|\\\c|\\\C\\-\\\s|g" $msfDir/lib/msf/core/exploit/remote/vim_soap.rb
sleep 1
GEMPATH=${PREFIX}/lib/ruby/gems/$rubyLIBv/gems/hrr_rb_ssh-0.4.2/lib/hrr_rb_ssh/transport
sed -i '13,15 {s/^/#/}' $GEMPATH/encryption_algorithm/functionable.rb
for i in 256 384 521;do
	sed -i '14 {s/^/#/}' $GEMPATH/server_host_key_algorithm/ecdsa_sha2_nistp$i.rb
done

echo "Fixing option '-x' on msfvenom command...";sleep 2
JAVADB="https://raw.githubusercontent.com/ivam3/java/master"
wget -q $JAVADB/.embed/apk.rb -O $msfDir/lib/msf/core/payload/apk.rb
find $msfDir -type f -executable -print0 | xargs -0 -r termux-fix-shebang
find ${PREFIX}/lib/ruby/gems -type f -iname \*.so -print0 | xargs -0 -r termux-elf-cleaner
cat <<- EOF > ${PREFIX}/bin/msfconsole
#!/data/data/com.termux/files/usr/bin/bash
SCRIPT_NAME=\$(basename "\$0")
METASPLOIT_PATH="${PREFIX}/opt/metasploit-framework"
RUBYv=\$(ls ${PREFIX}/lib/ruby |grep -m 1 '[0-9].[0-9].[0-9]')
LINUXANDROID=\$(find ${PREFIX}/lib/ruby/\$RUBYv -iname "bigdecimal.so"|awk -F "/" '{print \$10}')
export LD_PRELOAD="\$LD_PRELOAD:${PREFIX}/lib/ruby/\$RUBYv/\$LINUXANDROID/bigdecimal.so"

case "\$SCRIPT_NAME" in
	msfconsole)
		if [[ ! -d "${PREFIX}/var/lib/postgresql" ]]
		then
			mkdir -p "${PREFIX}/var/lib/postgresql"
      initdb "${PREFIX}/var/lib/postgresql" >/dev/null 2>/dev/null
		fi
    if ! pg_ctl -D "${PREFIX}/var/lib/postgresql" status >/dev/null 2>/dev/null
		then
			pg_ctl -D "${PREFIX}/var/lib/postgresql" start --silent >/dev/null 2>/dev/null
		fi
		[[ -z "\$(psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='msf'")" ]] && createuser msf
		[[ -z "\$(psql -l | grep msf_database)" ]] && createdb msf_database
    exec ruby "\$METASPLOIT_PATH/\$SCRIPT_NAME" "\$@"                  
		;;
	msfd|msfrpc|msfrpcd|msfvenom)
		[[ -e ${HOME}/.local/share/apktool/framework/1.apk ]] && rm ${HOME}/.local/share/apktool/framework/1.apk
		exec ruby "\$METASPLOIT_PATH/\$SCRIPT_NAME" "\$@"
		;;
	*)
		echo "[!] Unknown Metasploit command '\$SCRIPT_NAME'."
		exit 1
		;;
esac
EOF
chmod 755 ${PREFIX}/bin/msfconsole
for i in msfd msfrpc msfrpcd msfvenom;do
	ln -sfr ${PREFIX}/bin/msfconsole ${PREFIX}/bin/$i
done

echo "Setting metasploit database"
mkdir -p $msfDir/config
cat <<- EOF > $msfDir/config/database.yml
production:
  adapter: postgresql
  database: msf_database
  username: msf
  password:
  host: 127.0.0.1
  port: 5432
  pool: 75
  timeout: 5
EOF
mkdir -p ${PREFIX}/var/lib/postgresql
pg_ctl -D ${PREFIX}/var/lib/postgresql stop > /dev/null 2>&1 || true
if ! pg_ctl -D ${PREFIX}/var/lib/postgresql start --silent;then
	initdb ${PREFIX}/var/lib/postgresql
	pg_ctl -D ${PREFIX}/var/lib/postgresql start --silent
fi
[[ -z "$(psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='msf'")" ]] && createuser msf
[[ -z "$(psql -l|grep msf_database)" ]] && createdb msf_database
cd;rm -rf $msfDir/.git*
if [[ ${SHELL} = ${PREFIX}/bin/fish ]]
then
	INITFILE="$PREFIX/etc/fish/config.fish"
else
  INITFILE="$PREFIX/etc/bash.bashrc"
fi
if ! cat $INITFILE | grep -oE "postgresql" --silent;then
sed -i "4a alias postgresql=\"pg_ctl -D ${PREFIX}/var/lib/postgresql\"" $INITFILE
fi
exit 0
