#!/data/data/com.termux/files/usr/bin/bash
#
msfGit="https://github.com/rapid7/metasploit-framework.git"
mkdir -p ${PREFIX}/opt
msfDir="${PREFIX}/opt/metasploit-framework"

echo "Cloning metasploit-framework ..."
git clone --quiet --depth 1 $msfGit $msfDir
[[ -d $msfDir ]] || { echo "E: Metasploit directory missing... Aborting.";exit 1;}

echo "Installing and updating ruby gems ..."
cd $msfDir
mkdir -p $PREFIX/include/libxml/
ln -s $PREFIX/include/libxml2/libxml/* $PREFIX/include/libxml/ >/dev/null 2>/dev/null
nokoSED=$(cat metasploit-framework.gemspec|grep -i nokogiri|sed 's/nokogiri [\(\)]/(/g'|head -n 1|awk -F " " '{print $2,$3,$4}')
nokogiriVer="1.16.2"
sed -i "s|$nokoSED|'nokogiri', '~> $nokogiriVer'|" metasploit-framework.gemspec
#$(cat Gemfile.lock|grep -i nokogiri|sed 's/nokogiri [\(\)]/(/g'|cut -d ' ' -f 5|grep -oP "(.).[[:digit:]][\w+]?[.].")
#sed -i "5a gem 'net-smtp', require: false" $msfDir/Gemfile
[[ -d ${HOME}/.local/share/gem ]] && { rm -rf ${HOME}/.local/share/gem/*;} || { mkdir -p ${HOME}/.local/share/gem;}
gem install --no-document --verbose rubygems-update > $msfDir/rubygems-update.log
verToUp=$(grep "gem update" $msfDir/rubygems-update.log|grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
rm -rf $msfDir/rubygems-update.log
[[ -z $verToUp ]] || { gem update --system $verToUp;}
update_rubygems
gem install --no-document --verbose bundle bundler
bundle config build.nokogiri --platform=ruby -- --use-system-libraries \
  --with-xml2-include=$(pkg-config libxml-2.0 --cflags-only-I) \
  --with-xml2-lib=$(pkg-config libxml-2.0 --libs) \
  --with-xslt-include=$(pkg-config libxslt --cflags-only-I) \
  --with-xslt-lib=$(pkg-config libxslt --libs)

for i in nokogiri reline ansi; do 
  find $PREFIX/lib/ruby -iname "$i-[0-9]\.[0-9]\.[0-9].gemspec" -type f|xargs rm 2>/dev/null
  case $i in
    reline) version="0.5.10" ;;
    ansi) version="1.5.0" ;;
    nokogiri) version="$nokogiriVer" ;;
  esac

  gem uninstall $i -v "<$version"
  gem install $i -v "$version" --platform=ruby -- --use-system-libraries
    --with-xml2-include=$(pkg-config libxml-2.0 --cflags-only-I) \
    --with-xml2-lib=$(pkg-config libxml-2.0 --libs) \
    --with-xslt-include=$(pkg-config libxslt --cflags-only-I) \
    --with-xslt-lib=$(pkg-config libxslt --libs)
done

bundle update --bundler 2>/dev/null
[[ -e $msfDir/Gemfile.lock ]] && { rm -rf $msfDir/Gemfile.lock;}
bundle install -j$(nproc --all) --verbose

echo "Running RuGiR (Ruby Gem Issues Resolved) ...";
### FIXING THE MSFCONSOLE INITIAL WARNING 
format_gem() {
  local gem_output="$1"
  echo "$gem_output"|sed 's|(default: |(|'|sed -E "s/^([a-zA-Z0-9_-]+) \(([0-9]+\.[0-9]+\.[0-9]+).*/\\tgem '\1',  '\2'/" 2>/dev/null
}

for gem in logger ansi ostruct; do
  gem_output=$(gem list ^$gem$)

  [[ -z "$gem_output" ]] || {
    formatted_gem=$(format_gem "$gem_output")
    sed -i '31i\'"$formatted_gem" $msfDir/Gemfile
  }
done
########
rubyLIBv=$(ls ${PREFIX}/lib/ruby|sort -r|grep -m 1 '[0-9].[0-9].[0-9]')
rubyLIB="${PREFIX}/lib/ruby/gems/$rubyLIBv"
gemPost_adap=$(find $rubyLIB -iname "postgresql_adapter.rb")
sed -i "s@/etc/resolv.conf@${PREFIX}/etc/resolv.conf@g" $msfDir/lib/net/dns/resolver.rb
sed -i "s|@timestamp_decoder.to_h|**@timestamp_decoder.to_h|g" $gemPost_adap
for i in aarch64-linux-android arm-linux-androideabi \
	i686-linux-android x86_64-linux-android;do
	if [[ -e "$rubyLIB/${i}/bigdecimal.so" ]]
	then
		if [[ -e "$rubyLIB/${i}/bigdecimal/util.so" ]]
		then
			if [[ -n "$(patchelf --print-needed "$rubyLIB/${i}/bigdecimal/util.so"|grep bigdecimal.so)" ]]
			then
				exit 0
			fi
		fi
		if [[ -e "$rubyLIB/${i}/bigdecimal/util.so" ]]
		then
			patchelf --add-needed \
				"$rubyLIB/${i}/bigdecimal/util.so"
		fi
		if [[ -e "$rubyLIB/${i}/bigdecimal.so" ]]
		then
			patchelf --add-needed \
				"$rubyLIB/${i}/bigdecimal.so"
		fi
	fi
done
find $msfDir -type f -executable -print0 | xargs -0 -r termux-fix-shebang
find ${PREFIX}/lib/ruby/gems -type f -iname \*.so -print0 | xargs -0 -r termux-elf-cleaner
#for i in $(find ${PREFIX}/lib/ruby/ -type f -iname ruby_thread_local_var.rb);do
#	sed -i "s|ObjectSpace.define_finalizer(self, self.class.threadlocal_finalizer(@index))| |g" $i
#	sleep 1
#done
#sed -i "s|\\\c|\\\C\\-\\\s|g" $msfDir/lib/msf/core/exploit/remote/vim_soap.rb
#sleep 1
#GEMPATH=${PREFIX}/lib/ruby/gems/$rubyLIBv/gems/hrr_rb_ssh-0.4.2/lib/hrr_rb_ssh/transport
#sed -i '13,15 {s/^/#/}' $GEMPATH/encryption_algorithm/functionable.rb
#for i in 256 384 521;do
#	sed -i '14 {s/^/#/}' $GEMPATH/server_host_key_algorithm/ecdsa_sha2_nistp$i.rb
#done
#PRYCODEFILE=$(find $PREFIX/lib/ruby/ -iname "code.rb"|grep "pry")
#sed -i '342 {s/^/#/}' $PRYCODEFILE

echo "Fixing option '-x' on msfvenom command ..."
JAVADB="https://raw.githubusercontent.com/ivam3/java/master"
wget --tries=20 --quiet $JAVADB/.embed/apk.rb -O $msfDir/lib/msf/core/payload/apk.rb
for i in msfd msfdb msfrpc msfrpcd msfvenom;do
	ln -sfr ${PREFIX}/bin/msfconsole ${PREFIX}/bin/$i
done

echo "Setting metasploit database"
mkdir -p $msfDir/config
mkdir -p ${PREFIX}/var/lib/postgresql
cat <<- EOF > $msfDir/config/database.yml
production:
  adapter: postgresql
  database: msf_database
  username: msf
  password:
  host: 127.0.0.1
  port: 5432
  pool: 75
  timeout: 5
EOF
pg_ctl -D ${PREFIX}/var/lib/postgresql stop > /dev/null 2>/dev/null || true
if ! pg_ctl -D ${PREFIX}/var/lib/postgresql start --silent;then
	initdb ${PREFIX}/var/lib/postgresql
	pg_ctl -D ${PREFIX}/var/lib/postgresql start --silent
fi
[[ -z "$(psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='msf'")" ]] && createuser msf
[[ -z "$(psql -l|grep msf_database)" ]] && createdb msf_database
pg_ctl -D ${PREFIX}/var/lib/postgresql restart
psql -d msf_database -c "ALTER DATABASE msf_database OWNER TO msf;ALTER USER msf WITH PASSWORD ' ';"
cd;rm -rf $msfDir/.git*
if [[ ${SHELL} = ${PREFIX}/bin/fish ]]
then
	INITFILE="$PREFIX/etc/fish/config.fish"
else
  INITFILE="$PREFIX/etc/bash.bashrc"
fi
if ! cat $INITFILE | grep -oE "postgresql" --silent;then
sed -i "4a alias postgresql=\"pg_ctl -D ${PREFIX}/var/lib/postgresql\"" $INITFILE
fi

chmod +x ${PREFIX}/bin/msfconsole
curl -fsSL https://raw.githubusercontent.com/ivam3/i-Haklab/master/.deb/home/.local/bin/fixer -o /data/data/com.termux/files/usr/bin/fixer
chmod 751 /data/data/com.termux/files/usr/bin/fixer
echo "[*] Metasploit Framework installation finished."
echo "[*] Run 'msfconsole' or 'msfvenom' to execute it."
echo "[*] Run 'fixer' to fix any posible issue."
echo "[!] For help going to https://t.me/Ivam3_Bot."
echo "[*] @Ivam3: thank you for use my package."
####::: REPORT ISSUES AT https://t.me/Ivam3_Bot :::####
