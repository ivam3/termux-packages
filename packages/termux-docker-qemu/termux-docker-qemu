#!/data/data/com.termux/files/usr/bin/bash
# COLORS
W="\e[0m"
R="\e[31m"
G="\e[32m"
Y="\e[33m"
B="\e[34m"
os="$1"
mRAM="ram"
mnt="${HOME}/.local/share/termux-docker-qemu/$os/termux2$os"

[[ $# -eq 0 ]] && { 
  echo -en "\e[33mUsage:\e[0m termux-docker-qemu <operative system name> x11[for a grafical enviroment]"
  exit 1
}

[[ $2 == 'x11' ]] 2>/dev/null || { XorCLi="-nographic";}

[[ -d ${HOME}/.local/share/termux-docker-qemu/$os ]] && {
  cd ${HOME}/.local/share/termux-docker-qemu/$os
  [[ -d $mnt ]] || { mkdir -p $mnt;}
} || {
  echo -en $R"E:$W $(basename $0) PATH missing ...$Y Aborting.$W"
  exit 2
} 

case "$os" in
  alpine)
    #$(free --mega|grep "Mem"|awk '{print $2}') -smp \
    ipnet=$(ifconfig 2>/dev/null|grep -oE '([0-9]{1,3}\.){3}'|grep -v 255|grep -v 127|tail -n 1)
    iplan=$(ifconfig 2>/dev/null|grep -oE '([0-9]{1,3}\.){3}([0-9]{1,3})'|grep -v 255|grep -v 127|tail -n 1)
    qemu-system-x86_64 -machine q35 -m $mRAM -smp \
      cpus=$(nproc) -cpu qemu64,+avx,+avx2 -vga virtio -full-screen -usb \
      -drive if=pflash,format=raw,read-only=on,file=${PREFIX}/share/qemu/edk2-x86_64-code.fd \
      -netdev user,id=n1,net=$ipnet\0/24,dhcpstart=$ipnet\9,hostfwd=tcp::2222-:22,hostfwd=tcp::8000-:8000 \
      -device virtio-net,netdev=n1 \
      -virtfs local,path=$mnt,mount_tag=termux2$os,security_model=passthrough \
      $XorCLi $os.img
    ;;
  kalilinux)
    echo "W: kalilinux is unavailable, use it into a docker container with Alpine OS."
    ;;
  *)
    echo "E: Invalid Operative System.. Aborting."
    exit 3
    ;;
esac
####::: REPORT ISSUES AT https://t.me/Ivam3_Bot :::####
